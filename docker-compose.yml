version: "3.9"
services:
  microservice1:
    build:
      context: microservice1
      dockerfile: Dockerfile
    volumes:
      - ./microservice1/src/:/app/src
    ports:
      - "3003:3001"
    environment:
      PORT: 3001
      PREFIX: m1
      NODE_ENV: development
      NATS_CONNECTION_URL: nats://nats-dev:4222
      JWT_SECRET: secret
    depends_on:
      - nats-dev
    networks:
      - app-network

  microservice2:
    build:
      context: microservice2
      dockerfile: Dockerfile
    volumes:
      - ./microservice2/src/:/app/src
    ports:
      - "3004:3002"
    environment:
      PORT: 3002
      PREFIX: m2
      NODE_ENV: development
      NATS_CONNECTION_URL: nats://nats-dev:4222
      JWT_SECRET: secret
    depends_on:
      - nats-dev
    networks:
      - app-network
  
  nats-dev:
    ports:
      - "4222:4222"
    image: nats-streaming:0.17.0
    networks:
      - app-network

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - app-network

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/conf.d/node.template
      - ./nginx/html:/etc/nginx//html
    command: 'bash -c "cat /etc/nginx/conf.d/node.template > /etc/nginx/conf.d/default.conf && nginx -g ''daemon off;''"'
    depends_on:
      - microservice1
      - microservice2
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
